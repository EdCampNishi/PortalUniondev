
@{
    ViewBag.Title = "Agenda";

}
<link rel="stylesheet" href="~/Content/fullcalendar.css">
<script src="~/Scripts/fullcalendar/fullcalendar.min.js"></script>
<script src="~/Scripts/fullcalendar/locale/pt-br.js"></script>

<link rel="stylesheet"  href="~/Content/bootstrap.min.css" />
<link rel="stylesheet" href="~/Content/bootstrap-datetimepicker.min.css" />
<link rel="stylesheet" href="~/Scripts/bootstrap-datetimepicker.min.js" />


<style>
    .modal-body {
        max-height: calc(100vh - 250px);
        overflow-y: auto;
    }

    .input-group {
        margin-top: 10px;
    }

    .external-event {
        cursor: default;
    }

    .invisivel {
        display: none;
    }
</style>


<div class="container-fluid panel no-margin-bottom">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header" style="color: #0A5E8A;"> Agendamento</h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>

    <div class="row">
        <div class="col-lg-12">
            <ol class="breadcrumb">
                <li><a href="@Url.Action("index","home")">Home</a></li>


                <li class="active">Minhas Horas</li>
            </ol>
        </div>
    </div>


    <div class="row">

        <div class="col-md-8">
            <div id="calendario">

            </div>
        </div>
    </div>
</div>



<div id="modaHoras" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                <h4 class="modal-title text-center">Cadastro de Horas</h4>

            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-lg-12">
                        <div class="box box-solid">
                            <div class="box-header with-border">
                                <h3 class="box-title">Cadastrar Hora</h3>



                                <div class="btn-group">
                                    <button class="btn btn-box-tool dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-wrench"></i></button>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><a href="#" onclick="SobreTurno()"><i class="fa  fa-check"></i>Sobre o Turno</a></li>



                                    </ul>
                                </div>




                            </div>
                            <div class="box-body">
                                <form id="frmHoras" class="form-horizontal">
                                    <input type="hidden" id="hddData" />
                                    <input type="hidden" id="hddDescanso" />





                                    <div class="form-group ">
                                        <label class="control-label col-sm-2">Data</label>
                                        <div class="col-sm-4">
                                            <div class="input-group">

                                                <span class="input-group-btn">
                                                    <button class="btn btn-default" onclick="DiaAnterior()" type="button"><i class="fa fa-arrow-left"></i></button>
                                                </span>
                                                <input type="text" class="form-control" value="" name="txtData" id="txtData" readonly>
                                                <span class="input-group-btn">
                                                    <button class="btn btn-default" onclick="ProximoDia()" type="button"><i class="fa fa-arrow-right"></i></button>
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group abonada">


                                        <label class="col-sm-2 control-label">Falta Compensada</label>

                                        <div class="col-sm-6">


                                            <input type="checkbox" name="chkAbonada" id="chkAbonada" class="form-control" data-off-text="não" data-on-text="Sim" data-inverse="true" />

                                        </div>
                                    </div>






                                    <div class="form-group">


                                        <label class="control-label col-sm-2">1ª Entrada</label>

                                        <div class="col-sm-6 bootstrap-timepicker timepicker">

                                            <input id="txtPrimeiraEntrada" name="txtPrimeiraEntrada" type="text" class="hora form-control" data-val="true" data-val-required="Obrigatório">

                                            <span class="field-validation-valid help-block position-absolute" data-valmsg-replace="true" data-valmsg-for="txtPrimeiraEntrada"></span>


                                        </div>
                                    </div>

                                    <div class="form-group">


                                        <label class="control-label col-sm-2 ">1ª Saída</label>

                                        <div class="col-sm-6 bootstrap-timepicker timepicker">
                                            <input type="text" value="" name="txtPrimeiraSaida" id="txtPrimeiraSaida" class="form-control hora" data-val="true" data-val-required="Obrigatório" />
                                            <span class="field-validation-valid help-block position-absolute" data-valmsg-replace="true" data-valmsg-for="txtPrimeiraSaida"></span>

                                        </div>
                                    </div>

                                    <div class="form-group descanso">


                                        <label class="control-label col-sm-2">2ª Entrada</label>

                                        <div class="col-sm-6 bootstrap-timepicker timepicker">
                                            <input type="text" value="" name="txtSegundaEntrada" id="txtSegundaEntrada" class="form-control hora" />


                                        </div>
                                    </div>

                                    <div class="form-group descanso">


                                        <label class="control-label col-sm-2">2ª Saída</label>

                                        <div class="col-sm-6 bootstrap-timepicker timepicker">
                                            <input type="text" value="" name="txtSegundaSaida" id="txtSegundaSaida" class="form-control hora" />
                                            <span class="field-validation-valid help-block position-absolute" data-valmsg-replace="true" data-valmsg-for="txtSegundaSaida"></span>

                                        </div>
                                    </div>


                                    <div class="form-group">


                                        <label class="control-label col-sm-2">Motivo</label>

                                        <div class="col-sm-6">
                                            <textarea class="form-control" rows="2" id="txtMotivo" name="txtMotivo" data-val="true" data-val-required="Obrigatório"></textarea>
                                            <span class="field-validation-valid help-block position-absolute" data-valmsg-replace="true" data-valmsg-for="txtMotivo"></span>

                                        </div>
                                    </div>


                                </form>

                            </div>
                        </div>
                    </div>
                </div>







            </div>
            <div class="modal-footer">
                <a class="btn btn-default pull-left" data-dismiss="modal">Fechar</a>
                <a class="btn btn-success pull-right" onclick="Salvar()">Salvar</a>


            </div>

        </div>
    </div>
</div>

<div id="modalVerHoras" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                <h4 class="modal-title text-center">Horas</h4>

            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-lg-12">
                        <div class="box box-solid">
                            <div class="box-header with-border">









                            </div>
                            <div class="box-body">
                                <form id="frmHorasVer" class="form-horizontal">
                                    <input type="hidden" id="hddCriptHora" />



                                    <div class="form-group ">
                                        <label class="control-label col-sm-2">Status</label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="txtStatusVer" readonly />

                                        </div>
                                        <div class="col-sm-2">
                                            <a class="btn btn-danger" onclick="CancelarHora()" id="btnCancelar">Cancelar Solicitação</a>
                                        </div>
                                    </div>



                                    <div class="form-group ">
                                        <label class="control-label col-sm-2">Data</label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="txtDataVer" readonly />
                                        </div>
                                    </div>

                                    <div class="form-group abonada">


                                        <label class="col-sm-2 control-label">Falta Compensada</label>

                                        <div class="col-sm-6">


                                            <input type="checkbox" name="chkAbonadaVer" id="chkAbonadaVer" class="form-control" data-off-text="não" data-on-text="Sim" data-inverse="true" />

                                        </div>
                                    </div>

                                    <div class="form-group">


                                        <label class="col-sm-2 control-label">Dia de Descanso</label>

                                        <div class="col-sm-6">


                                            <input type="checkbox" name="chkDescansoVer" id="chkDescansoVer" class="form-control" data-off-text="não" data-on-text="Sim" data-inverse="true" />

                                        </div>
                                    </div>




                                    <table class="table table-striped table-bordered table-hover" id="gridHorasVer">
                                        <thead>
                                            <tr>
                                                <th>Dia</th>
                                                <th>1ª Entrada</th>
                                                <th>1ª Saída</th>
                                                <th>2ª Entrada</th>
                                                <th>2ª Saída</th>
                                                <th>Saldo</th>


                                            </tr>
                                        </thead>
                                        <tbody></tbody>


                                    </table>

                                    <br />



                                    <div class="form-group">


                                        <label class="control-label col-sm-2">Motivo</label>

                                        <div class="col-sm-6">
                                            <textarea class="form-control" rows="2" id="txtMotivoVer" name="txtMotivoVer" readonly></textarea>


                                        </div>
                                    </div>

                                    <div class="form-group reprova">


                                        <label class="control-label col-sm-2">Justificativa</label>

                                        <div class="col-sm-6">
                                            <textarea class="form-control" rows="2" id="txtJustificativaVer" name="txtJustificativaVer" readonly></textarea>


                                        </div>
                                    </div>


                                </form>

                            </div>
                        </div>
                    </div>
                </div>







            </div>
            <div class="modal-footer">
                <a class="btn btn-default pull-right" data-dismiss="modal">Fechar</a>



            </div>

        </div>
    </div>
</div>

<script>
    $("#aviso").delay(5000).fadeOut();
    $(function (argument) {
        $('[type="checkbox"]').bootstrapSwitch({
            size: 'small'


        });
    });

    $('.hora').timepicker({
        showInputs: false,
        showMeridian: false,
        defaultTime: false
    });






    function VerificarTurno() {
        if ('@ViewBag.Turno' == '') {




            bootbox.dialog({
                message: "Usuário não possui um turno cadastrado",
                closeButton: false,
                buttons: {

                    success: {
                        label: "Ok",
                        className: "btn-success",
                        callback: function () {
                            window.location.href = '@Url.Action("Index", "Home")';
                        },
                    }
                }
            });


        }
        else {
            VerificarEquipe();
        }
    }

    function VerificarEquipe() {
        if ('@ViewBag.Equipe' == '') {




            bootbox.dialog({
                message: "Usuário não possui equipe",
                closeButton: false,
                buttons: {

                    success: {
                        label: "Ok",
                        className: "btn-success",
                        callback: function () {
                            window.location.href = '@Url.Action("Index", "Home")';
                        },
                    }
                }
            });


        }
        else {
            CarregarHoras();
        }
    }


    function CarregarHoras() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("BuscarHorasLogado", "RH")',


            dataType: "json",
            success: function (dados) {
                if (dados.hasOwnProperty("negativo")) {
                    $("#divHoras").addClass('bg-red');
                    $("#spaHoras").html(dados.hora);
                }
                else {
                    $("#divHoras").addClass('bg-green');
                    $("#spaHoras").html(dados.hora);
                }
            }
        });




    }



    $(document).ready(function () {



        $('body').on('click', '.disabled', function (e) {
            return false;
        });


        $(".hora").inputmask("h:s", { "placeholder": "hh:mm" });


        $('#modalVerHoras').on('hidden.bs.modal', function () {
            $('#chkDescansoVer').bootstrapSwitch('readonly', false);


            $('#chkAbonadaVer').bootstrapSwitch('readonly', false);
        });

        $('#calendario').fullCalendar({

            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month'
            },


            dayClick: function (date, jsEvent, view) {

                var hoje = moment(),
                 click = date;


                if (hoje.format('M') == click.format('M')) {

                    if ((click.format('D') * 1) > (hoje.format('D') * 1)) {
                        ShowAlert("Você não pode lançar horas extras em datas futuras");
                        return;
                    }
                    var dif = (hoje.format('D') * 1) - (click.format('D') * 1);


                    if (dif == -1) {
                        ShowAlert("Você não pode lançar horas extras depois de passado 2 dias");
                    }
                    else {



                        $("#modaHoras").modal({
                            backdrop: 'static'
                        }, 'show');

                        $("#txtData").val(click.format('ddd, D MMMM'));
                        $("#txtData").focus();
                        $("#hddData").val(click.format('DD/MM/YYYY'));

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("SobreTurno", "RH")',

                            data: {
                                datainfo: $("#hddData").val()
                            },
                            dataType: "json",
                            success: function (dados) {
                                $('#chkAbonada').bootstrapSwitch('state', false);
                                if (dados.hasOwnProperty('descanso')) {
                                    $(".descanso").hide();

                                    $("#txtPrimeiraEntrada").val("");
                                    $("#txtPrimeiraSaida").val("");
                                    $("#hddDescanso").val('1');
                                    $(".abonada").hide();
                                }
                                else {
                                    $(".descanso").show();
                                    $(".abonada").show();


                                    $("#txtPrimeiraEntrada").val(dados.entrada1);
                                    $("#txtPrimeiraSaida").val(dados.saida1);
                                    $("#txtSegundaEntrada").val(dados.entrada2);
                                    $("#txtSegundaSaida").val(dados.saida2);
                                    $("#hddDescanso").val('0');
                                }
                            }
                        });

                    }




                } else {
                    ShowAlert("Data escolhida, fora do mês");
                }








            },



            eventSources: [
            {
                url: '@Url.Action("BuscarHorasCadastradas", "RH")',
                type: 'POST',
                data: function () {

                    var data = moment($('#calendario').fullCalendar('getDate'), 'DD/MM/YYYY');

                    return {
                        data: data.format('DD/MM/YYYY')
                    }
                }
            }
            ],
            eventClick: function (calEvent, jsEvent, view) {

                $("#modalVerHoras").modal({
                    backdrop: 'static'
                }, 'show');

                $("#txtDataVer").val(moment(calEvent.start).format('DD/MM/YYYY'));
                $("#hddCriptHora").val(calEvent.id);
                $("#txtStatusVer").val(calEvent.status);

                if (calEvent.status == "Pendente") {
                    $("#btnCancelar").show();
                }
                else {
                    $("#btnCancelar").hide();
                }


                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SobreHora", "RH")',
                    data: { codCript: calEvent.id },

                    dataType: "json",
                    success: function (dados) {

                        if (dados.hasOwnProperty('descanso')) {
                            $('#chkDescansoVer').bootstrapSwitch('state', true);

                        }
                        else {
                            $('#chkDescansoVer').bootstrapSwitch('state', false);
                        }

                        if (dados.hasOwnProperty("motivoreprova")) {
                            $(".reprova").show();
                            $("#txtJustificativaVer").val(dados.motivoreprova);
                        } else {
                            $(".reprova").hide();
                            $("#txtJustificativaVer").val("");
                        }

                        $('#chkDescansoVer').bootstrapSwitch('readonly', true);

                        $('#chkAbonadaVer').bootstrapSwitch('state', dados.abonada);
                        $('#chkAbonadaVer').bootstrapSwitch('readonly', true);
                        $("#txtMotivoVer").val(dados.motivo);

                        var corpo = $("#gridHorasVer").find('tbody');
                        corpo.html('');

                        var str = '<tr>' +
                            '<td>' + moment(calEvent.start).format("dddd") + '</td>' +
                            '<td>' + dados.entrada1 + '</td>' +
                             '<td>' + dados.saida1 + '</td>' +
                              '<td>' + dados.entrada2 + '</td>' +
                               '<td>' + dados.saida2 + '</td>' +
                                '<td>' + dados.saldo + '</td>' +

                                  '</tr>';


                        corpo.append(str);
                    }
                });



            }

        });



    });



    function SobreTurno() {
        if ($("#hddData").val() != "") {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SobreTurno", "RH")',

                data: {
                    datainfo: $("#hddData").val()
                },
                dataType: "json",
                success: function (dados) {
                    if (dados.hasOwnProperty('descanso')) {


                        GridDescanso(dados);
                    }
                    else {
                        GridTrabalho(dados);
                    }
                }





            });


        }
        else {
            ShowAlert("Data não informada");
        }

    }

    function GridDescanso(dados) {

        var corpo = $("#gridDescanso").find('tbody');
        corpo.html('');

        var str = '<tr>' +
            '<td>' + moment($("#txtData").val(), 'DD/MM/YYYY').format('dddd') + '</td>' +
            '<td>' + dados.limite + '</td>' +
        '</tr>';
        corpo.append(str);

        $("#DescTitulo").html(dados.nometurno);

        $("#modalDescanso").modal({
            backdrop: 'static'
        }, 'show')
    }

    function GridTrabalho(dados) {
        var corpo = $("#gridTrabalho").find('tbody');
        corpo.html('');

        var str = '<tr>' +
            '<td>' + moment($("#txtData").val(), 'DD/MM/YYYY').format('dddd') + '</td>' +
            '<td>' + dados.entrada1 + '</td>' +
             '<td>' + dados.saida1 + '</td>' +
              '<td>' + dados.entrada2 + '</td>' +
               '<td>' + dados.saida2 + '</td>' +
                '<td>' + (dados.intervalo ? 'Das ' + dados.saida1 + ' às ' + dados.entrada2 : 'Náo tem intervalo') + '</td>' +
                 '<td>' + dados.limite + '</td>' +
                  '</tr>';


        corpo.append(str);

        $("#TrabTitulo").html(dados.nometurno);

        $("#modalTrabalho").modal({
            backdrop: 'static'
        }, 'show')
    }

    function ProximoDia() {

        var hoje = moment(),
            proximo = moment($("#hddData").val(), 'DD/MM/YYYY').add(1, 'd');



        if (proximo.format('M') == hoje.format('M')) {

            if ((proximo.format('D') * 1) > (hoje.format('D') * 1)) {
                ShowAlert("Você não pode lançar horas extras em datas futuras");
                return;
            }

            var dif = (hoje.format('D') * 1) - (proximo.format('D') * 1);


            if (dif == -1) {
                ShowAlert("Você não pode lançar horas extras depois de passado 2 dias");
            }
            else {


                $("#txtData").val(proximo.format('ddd, D MMMM'));
                $("#txtData").focus();
                $("#hddData").val(proximo.format('DD/MM/YYYY'));

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SobreTurno", "RH")',

                    data: {
                        datainfo: $("#hddData").val()
                    },
                    dataType: "json",
                    success: function (dados) {
                        $('#chkAbonada').bootstrapSwitch('state', false);
                        if (dados.hasOwnProperty('descanso')) {
                            $(".descanso").hide();

                            $("#txtPrimeiraEntrada").val("");
                            $("#txtPrimeiraSaida").val("");

                            $("#hddDescanso").val('1');
                            $(".abonada").hide();
                        }
                        else {
                            $(".descanso").show();
                            $("#hddDescanso").val('0');
                            $(".abonada").show();

                            $("#txtPrimeiraEntrada").val(dados.entrada1);
                            $("#txtPrimeiraSaida").val(dados.saida1);
                            $("#txtSegundaEntrada").val(dados.entrada2);
                            $("#txtSegundaSaida").val(dados.saida2);
                        }
                    }
                });






            }




        } else {
            ShowAlert("Data escolhida, fora do mês");
            return;
        }

    }

    function DiaAnterior() {
        var atual = moment($("#hddData").val(), 'DD/MM/YYYY'),
          anterior = moment($("#hddData").val(), 'DD/MM/YYYY').add(-1, 'd'),
            hoje = moment();


        if (atual.format('M') == anterior.format('M')) {


            var dif = (hoje.format('D') * 1) - (anterior.format('D') * 1);


            if (dif == -1) {
                ShowAlert("Você não pode lançar horas extras depois de passado 2 dias");
                return;
            }


            $("#txtData").val(anterior.format('ddd, D MMMM'));
            $("#txtData").focus();
            $("#hddData").val(anterior.format('DD/MM/YYYY'));

            $.ajax({
                type: "POST",
                url: '@Url.Action("SobreTurno", "RH")',

                data: {
                    datainfo: $("#hddData").val()
                },
                dataType: "json",
                success: function (dados) {
                    $('#chkAbonada').bootstrapSwitch('state', false);
                    if (dados.hasOwnProperty('descanso')) {
                        $(".descanso").hide();
                        $("#hddDescanso").val('1');
                        $(".abonada").hide();

                        $("#txtPrimeiraEntrada").val("");
                        $("#txtPrimeiraSaida").val("");
                    }
                    else {
                        $(".descanso").show();
                        $("#hddDescanso").val('0');
                        $(".abonada").show();

                        $("#txtPrimeiraEntrada").val(dados.entrada1);
                        $("#txtPrimeiraSaida").val(dados.saida1);
                        $("#txtSegundaEntrada").val(dados.entrada2);
                        $("#txtSegundaSaida").val(dados.saida2);
                    }
                }
            });



        } else {
            ShowAlert("Data escolhida, fora do mês");
            return;
        }
    }

    function Salvar() {

        if ($("#hddDescanso").val() == "0") {
            $("#txtSegundaSaida").rules("add", {
                required: function (el) {
                    console.log(($("#txtSegundaEntrada").val() != ""))
                    return ($("#txtSegundaEntrada").val() != "");
                },
                messages: {
                    required: "Obrigatório"
                }
            });
        }

        $("#frmHoras").validate()




        $("#frmHoras").validate().settings.ignore = "";

        if ($("#frmHoras").valid()) {
            //Verificar se é dia de descanso
            if ($("#hddDescanso").val() == "1") {

                var primeira = moment($("#hddData").val() + " " + $("#txtPrimeiraEntrada").val(), 'DD/MM/YYYY HH:mm'),
                    segunda = moment($("#hddData").val() + " " + $("#txtPrimeiraSaida").val(), 'DD/MM/YYYY HH:mm');

                if (segunda.isBefore(primeira)) {
                    ShowAlert("Saída não pode ser menor que a entrada");
                    return;
                }
                SalvarHorasDescanso();
            } else {
                var primeira = moment($("#hddData").val() + " " + $("#txtPrimeiraEntrada").val(), 'DD/MM/YYYY HH:mm'),
                    segunda = moment($("#hddData").val() + " " + $("#txtPrimeiraSaida").val(), 'DD/MM/YYYY HH:mm');

                if (segunda.isBefore(primeira)) {
                    ShowAlert("Saída não pode ser menor que a entrada");
                    return;
                }

                if ($("#txtSegundaEntrada").val() == "") {
                    $("#txtSegundaSaida").val("");
                }
                else {
                    var segundaEnt = moment($("#hddData").val() + " " + $("#txtSegundaEntrada").val(), 'DD/MM/YYYY HH:mm'),
                    segundaSai = moment($("#hddData").val() + " " + $("#txtSegundaSaida").val(), 'DD/MM/YYYY HH:mm');

                    if (segundaSai.isBefore(segundaEnt)) {
                        ShowAlert("Saída 2  não pode ser menor que a entrada 2");
                        return;
                    }

                }
                SalvarHoras();
            }



        } else {

            ShowAlert("Revisar campos obrigatórios")
        }
    }

    function SalvarHorasDescanso() {

        bootbox.dialog({
            message: "Deseja Salvar?",
            closeButton: false,
            buttons: {
                danger: {
                    label: "Não",
                    className: "btn-danger",
                    callback: function () {
                        return;
                    }
                },
                success: {
                    label: "Sim",
                    className: "btn-success",
                    callback: function () {
                        var obj = {
                            data: $("#hddData").val(),
                            entrada: $("#txtPrimeiraEntrada").val(),
                            saida: $("#txtPrimeiraSaida").val(),
                            motivo: $("#txtMotivo").val()
                        };

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("SalvarHorasDescanso", "RH")',

                            data: obj,
                            dataType: "json",
                            success: function (dados) {
                                if (dados.hasOwnProperty("erro")) {


                                    ShowAlert("Erro:" + dados.erro);

                                } else if (dados.hasOwnProperty('email')) {
                                    bootbox.dialog({
                                        message: dados.email,
                                        closeButton: false,
                                        buttons: {

                                            success: {
                                                label: "Ok",
                                                className: "btn-success",
                                                callback: function () {
                                                    window.location.href = '@Url.Action("MinhasHoras", "RH")?sucesso=cadastro';
                                                },
                                            }
                                        }
                                    });
                                }
                                else {
                                    window.location.href = '@Url.Action("MinhasHoras", "RH")?sucesso=cadastro';
                                }
                            }
                        });
                    },
                }
            }
        });


    }

    function SalvarHoras() {


        bootbox.dialog({
            message: "Deseja Salvar?",
            closeButton: false,
            buttons: {
                danger: {
                    label: "Não",
                    className: "btn-danger",
                    callback: function () {
                        return;
                    }
                },
                success: {
                    label: "Sim",
                    className: "btn-success",
                    callback: function () {
                        var horas = [];
                        $('.hora').each(function (chave, valor) {

                            horas.push($(valor).val());
                        });

                        var obj = {
                            data: $("#hddData").val(),
                            abonada: $('#chkAbonada').bootstrapSwitch('state'),
                            horas: JSON.stringify(horas),
                            motivo: $("#txtMotivo").val()
                        };

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("SalvarHoras", "RH")',

                            data: obj,
                            dataType: "json",
                            success: function (dados) {
                                if (dados.hasOwnProperty("erro")) {
                                    ShowAlert("Erro:" + dados.erro);
                                }
                                else {
                                    window.location.href = '@Url.Action("MinhasHoras", "RH")?sucesso=cadastro';
                                }
                            }
                        });
                    },
                }
            }
        });





    }

    function CancelarHora() {
        bootbox.dialog({
            message: "Deseja apagar essa solicitação?",
            closeButton: false,
            buttons: {
                danger: {
                    label: "Não",
                    className: "btn-danger",
                    callback: function () {
                        return;
                    }
                },
                success: {
                    label: "Sim",
                    className: "btn-success",
                    callback: function () {


                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("CancelarHora", "RH")',

                            data: { codCript: $("#hddCriptHora").val() },
                            dataType: "json",
                            success: function (dados) {
                                if (dados.hasOwnProperty("erro")) {
                                    ShowAlert("Erro:" + dados.erro);
                                }
                                else {
                                    window.location.href = '@Url.Action("MinhasHoras", "RH")?sucesso=exclui';
                                }
                            }
                        });
                    },
                }
            }
        });
    }

    function ObterAtualizacoesMinhasHoras() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("ObterAtualizacoesMinhasHoras", "RH")',


            dataType: "json",
            success: function (dados) {
                $("#listaAtualizacao").html('');

                $.each(dados.lista, function (chave, valor) {

                    $("#listaAtualizacao").append('<li>' + valor.frase + '</li>');



                });


            }
        });
    }
</script>
